using NUnit.Framework;

namespace DotNetStandardUtils.Tests
{
    [TestFixture]
    [Category("UnitTests")]
    public class BitFlagsUtilsTests
    {
        [TestCase(0b_00000000_00000000_00000000_00000000U, 0b_00000000_00000000_00000000_00000000U, true)]
        [TestCase(0b_11111111_11111111_11111111_11111111U, 0b_11111111_11111111_11111111_11111111U, true)]
        [TestCase(0b_00000001_00000000_00000000_00000000U, 0b_00000001_00000000_00000000_00000000U, true)]
        [TestCase(0b_00000000_00000000_00000000_00000001U, 0b_00000000_00000000_00000000_00000001U, true)]
        [TestCase(0b_00000000_00010000_00000000_00000000U, 0b_10000000_00011000_00000000_00000000U, true)]
        [TestCase(0b_00000000_00000000_00000000_00000000U, 0b_11111111_11111111_11111111_11111111U, true)]
        [TestCase(0b_10000000_00000000_00000000_00000000U, 0b_00000000_00000000_00000000_00000000U, false)]
        [TestCase(0b_10000000_00000000_00000000_00000000U, 0b_00000000_00000000_00000000_00000001U, false)]
        [TestCase(0b_11111111_11111111_11111111_11111111U, 0b_00000000_00000000_00000000_00000000U, false)]
        [TestCase(0b_10111111_01011111_01111111_01111111U, 0b_01000000_10100000_10000000_10000000U, false)]
        public void HasAnyFlag_CheckForMultipleIntValues_ShouldReturnExpectedResult(uint value, uint flags, bool hasAnyFlag)
        {
            bool hasAnyFlagResult = BitFlagsUtils.HasAnyFlag(value, flags);
            Assert.AreEqual(hasAnyFlag, hasAnyFlagResult);
        }


        [TestCase(0b_00000000_00000000_00000000_00000000, 0b_00000000_00000000_00000000_00000000, true)]
        [TestCase(0b_01111111_11111111_11111111_11111111, 0b_01111111_11111111_11111111_11111111, true)]
        [TestCase(0b_00000001_00000000_00000000_00000000, 0b_00000001_00000000_00000000_00000000, true)]
        [TestCase(0b_00000000_00000000_00000000_00000001, 0b_00000000_00000000_00000000_00000001, true)]
        [TestCase(0b_01000000_00010000_00000000_00000000, 0b_01000000_00011000_00000000_00000000, true)]
        [TestCase(0b_00000000_00000000_00000000_00000000, 0b_01111111_11111111_11111111_11111111, true)]
        [TestCase(0b_01000000_00000000_00000000_00000000, 0b_00000000_00000000_00000000_00000000, false)]
        [TestCase(0b_01000000_00000000_00000000_00000000, 0b_00000000_00000000_00000000_00000001, false)]
        [TestCase(0b_01111111_11111111_11111111_11111111, 0b_00000000_00000000_00000000_00000000, false)]
        [TestCase(0b_00111111_01011111_01111111_01111111, 0b_01000000_10100000_10000000_10000000, false)]
        public void HasAnyFlag_CheckForMultipleIntValues_ShouldReturnExpectedResult(int value, int flags, bool hasAnyFlag)
        {
            bool hasAnyFlagResult = BitFlagsUtils.HasAnyFlag(value, flags);
            Assert.AreEqual(hasAnyFlag, hasAnyFlagResult);
        }
    }
}